{"mappings":"YAwHA,IAAIA,EAAW,IAAIC,sBA0CnB,SAAkBC,GAChBA,EAAQC,SAAQC,IAEVA,EAAMC,iBACJC,EAAYC,KAGhBC,IACN,GAEA,IAnDA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,mBAC7BC,KAAMF,SAASC,cAAc,eAC7BE,cAAeH,SAASC,cAAc,qBAGlCF,KAAEK,EAAIF,KAAEG,EAAIF,cAAEG,GAAkBR,EAEhCH,EAAc,IAhEpB,MACEY,GAAY,yCACZC,GAAW,8CAEXZ,GACAa,GACAC,GAEAC,GAAgB,IAAIC,gBAAgB,CAClCC,SAAU,GACVC,UAAWC,MAAKP,EAChBQ,MAAO,QACPC,YAAa,aAGfC,cACEH,MAAKnB,EAAQ,EACbmB,MAAKN,EAAe,GACpBM,MAAKL,EAAc,CACrB,CAEES,kBACE,MAAMC,QAAYC,MAAM,GAAGN,MAAKR,WAAmBQ,MAAKN,UAAqBM,MAAKnB,KAASmB,MAAKJ,KAC9F,GAAIS,EAAIE,GACN,OAAOF,EAAIG,OAEb,MAAM,IAAIC,MAAMJ,EAAIK,WAExB,CAGE7B,WACF,OAAOmB,MAAKnB,CACd,CAEIA,SAAK8B,GACPX,MAAKnB,EAAQ8B,CACf,CAEIjB,gBAAYkB,GACdZ,MAAKN,EAAekB,CACtB,CAEIlB,kBACF,OAAOM,MAAKN,CACd,CAEIC,iBACF,OAAOK,MAAKL,CACd,CACMA,eAAWA,GACdK,MAAKL,EAAcA,CACtB,GAeF,SAASkB,EAAmBC,GAC1B,OAAOA,EACJC,KACC,EAACC,KAAEA,EAAIC,gBAAEA,KAAsB,iDACjBD,EAAKE,eAAeD,uCAGnCE,KAAK,GACV,CACA,IAAIC,GAAa,EAIjBhB,eAAetB,IAGb,GAFAF,EAAYC,KAAO,EAEfuC,EAAY,OAChBA,GAAa,EACb,MAAMf,QAAYzB,EAAYyC,YAC9B/B,EAAKgC,mBAAmB,YAAaT,EAAmBR,EAAIkB,UAExD3C,EAAYC,OAASD,EAAYe,aACnCJ,EAAciC,UAAUC,OAAO,cAC/BnD,EAASoD,UAAUnC,IAErB6B,GAAa,CACf,CAmDA/B,EAAKsC,iBAAiB,UAjCtBvB,eAA4BwB,GAC1BA,EAAIC,iBACJvC,EAAKwC,UAAY,GACjBlD,EAAYC,KAAO,EAEnB,MAAMkD,EAAY1C,EAAK2C,SAASC,MAAMC,MAAMC,OAC5C,GAAkB,KAAdJ,EACF,OAEFnD,EAAYc,YAAcqC,EAQ1B,MAAM1B,QAAYzB,EAAYyC,YAC9B,GAA2B,IAAvBhB,EAAIkB,QAAQa,OACd,OAAOC,MAAM,cAEfzD,EAAYe,WAAaU,EAAIiC,YAC7BhD,EAAKgC,mBAAmB,YAAaT,EAAmBR,EAAIkB,UAE5DzC,IAEIF,EAAY0D,YAAc,GAC5B/C,EAAciC,UAAUe,IAAI,aAIhC,G","sources":["src/index.js"],"sourcesContent":["// import './css/styles.css';\n// import axios from \"axios\";\n// const BASE_URL = 'https://62d459315112e98e484e5213.mockapi.io';\n\n// GET -> /contacts\n// const getContacts = async () => {\n//   const res = await fetch(`${BASE_URL}/contacts`);\n//   return res.json();\n// };\n// getContacts().then(console.log());\n\n\n\n// GET -> /contacts/:id\n// const getContactById = async id => {\n//   const res = await fetch(`${BASE_URL}/contacts/${id}`);\n//   return res.json();\n\n// };\n// getContactById(7).then(console.log)\n\n// POST -> /contacts\n// const createContact = async contact => {\n//   const options = {\n//     method: 'POST',\n//     body: JSON.stringify(contact),\n//     headers: {\n//       'Content-Type': 'application/json; charset=UTF-8',\n//     },\n//   };\n\n//   const res = await axios.post(`${BASE_URL}/contacts`, options)\n    // return res.json();\n// };\n// createContact({\n  \n// name: \"Anti Veum\",\n// number: \"518-844-4344\",\n// avatar: \"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/43.jpg\",\n// email: \"aaant@gmail.com\",\n\n// })\n\n// PUT -> /contacts/:id\n// const updateContact = async newContact => {\n//   const res = await axios.put({`${BASE_URL}/contact`}/${id});\n//  return res.data\n//   };\n\n \n\n\n// DELETE -> /contacts/:id\n// const deleteContact = async id => {\n  \n//   await axios.delete(`${BASE_URL}/contacts/${id}`);\n// };\n// deleteContact(44);\n// deleteContact(43);\n// deleteContact(45);\n// deleteContact(46);\n// deleteContact(47);\n// deleteContact(48);\n// deleteContact(51);\n\nclass UnsplashAPI {\n  #BASE_URL = 'https://api.unsplash.com/search/photos';\n  #API_KEY = 'LxvKVGJqiSe6NcEVZOaLXC-f2JIIWZaq_o0WrF8mwJc';\n\n  #page;\n  #searchQuery;\n  #totalPages;\n\n  #searchParams = new URLSearchParams({\n    per_page: 30,\n    client_id: this.#API_KEY,\n    color: 'black',\n    orientation: 'portrait',\n  });\n\n  constructor() {\n    this.#page = 1;\n    this.#searchQuery = '';\n    this.#totalPages = 0;\n  }\n\n    async getImages() {\n      const res = await fetch(`${this.#BASE_URL}?query=${this.#searchQuery}&page=${this.#page}&${this.#searchParams}`);\n        if (res.ok) {\n          return res.json()\n        }\n        throw new Error(res.statusText)\n    \n    }\n  \n\n  get page() {\n    return this.#page;\n  }\n\n  set page(newPage) {\n    this.#page = newPage;\n  }\n\n  set searchQuery(newQuery) {\n    this.#searchQuery = newQuery;\n  }\n\n  get searchQuery() {\n    return this.#searchQuery;\n  }\n\n  get totalPages() {\n    return this.#totalPages;\n  }\n    set totalPages(totalPages) {\n     this.#totalPages = totalPages;\n  }\n\n}\nlet observer = new IntersectionObserver(callback);\nconst refs = {\n  form: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-gallery'),\n  loadMoreBlock: document.querySelector('.target-element'),\n};\n \nconst { form, list, loadMoreBlock } = refs;\n\nconst unsplashApi = new UnsplashAPI();\n\n\nfunction createGalleryCards(images) {\n  return images\n    .map(\n      ({ urls, alt_description }) => `<li class=\"gallery__item\">\n        <img src=\"${urls.small}\" alt=\"${alt_description}\" class=\"gallery-img\">\n    </li>`\n    )\n    .join('');\n}\nlet isMoreItem = false;\n\n\n\nasync function loadMoreItems() {\n  unsplashApi.page = + 1;\n\n  if (isMoreItem) return;\n  isMoreItem = true;\n  const res = await unsplashApi.getImages();\n  list.insertAdjacentHTML('beforeend', createGalleryCards(res.results));\n\n  if (unsplashApi.page === unsplashApi.totalPages) {\n    loadMoreBlock.classList.remove('is-visible');\n    observer.unobserve(loadMoreBlock);\n  }\n  isMoreItem = false;\n}\n\n// unsplashApi.totalPages = res.total_pages;\n\nfunction callback(entries) {\n  entries.forEach(entry => {\n  //  if (entry.IntersectionRatio === 1) return\n    if (entry.isIntersecting) {\n      if (unsplashApi.page > 1) {\n        \n      }\n      loadMoreItems();\n}\n  });\n}\n\n\n\nasync function handleSubmit(evt) {\n  evt.preventDefault();\n  list.innerHTML = '';\n  unsplashApi.page = 1;\n\n  const inputText = form.elements.query.value.trim();\n  if (inputText === '') {\n    return;\n  }\n  unsplashApi.searchQuery = inputText;\n \n\n  // const response = unsplashApi.getImages().then(res => res.results);\n  // console.log(response);\n\n  //\n  \n  const res = await unsplashApi.getImages();\n  if (res.results.length === 0) {\n    return alert('No results');\n  }\n  unsplashApi.totalPages = res.total_pages;\n  list.insertAdjacentHTML('beforeend', createGalleryCards(res.results));\n  \n  loadMoreItems();\n\n  if (unsplashApi.total_pages > 1) {\n    loadMoreBlock.classList.add('is-visible');\n\n  }\n  \n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$b8f9b7833fa37166$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$b8f9b7833fa37166$var$unsplashApi","page","$b8f9b7833fa37166$var$loadMoreItems","$b8f9b7833fa37166$var$refs","form","document","querySelector","list","loadMoreBlock","$b8f9b7833fa37166$var$form","$b8f9b7833fa37166$var$list","$b8f9b7833fa37166$var$loadMoreBlock","BASE_URL","API_KEY","searchQuery","totalPages","searchParams","URLSearchParams","per_page","client_id","this","color","orientation","constructor","async","res","fetch","ok","json","Error","statusText","newPage","newQuery","$b8f9b7833fa37166$var$createGalleryCards","images","map","urls","alt_description","small","join","$b8f9b7833fa37166$var$isMoreItem","getImages","insertAdjacentHTML","results","classList","remove","unobserve","addEventListener","evt","preventDefault","innerHTML","inputText","elements","query","value","trim","length","alert","total_pages","add"],"version":3,"file":"index.487365eb.js.map"}